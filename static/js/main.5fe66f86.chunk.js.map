{"version":3,"sources":["Components/Header.js","Components/SideMenu.js","Components/Editor.js","Components/Preview.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","SideMenu","props","date","theme","setTheme","setDate","selected","onChange","options","value","placeholder","EditorView","useState","Date","React","EditorState","createEmpty","editorState","setEditorState","title","setTitle","e","target","state","spellCheck","pathname","text","draftToHtml","convertToRaw","getCurrentContent","Preview","location","useEffect","console","log","toLocaleDateString","dangerouslySetInnerHTML","__html","src","App","path","render","Editor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe66f86.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <nav className=\"header-nav\">\n                <Link to=\"/SimpleEditor\" className=\"header-title\">Chaeban Editor</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport Dropdown from 'react-dropdown';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-dropdown/style.css';\n\nfunction SideMenu(props) {\n\n    const dropdownOptions = [\n        'default',\n        'dark',\n        'pink', \n        'purple', \n        'yellow'\n    ];\n\n    const { date, theme, setTheme, setDate } = props;\n\n    return (\n        <div>\n            <h3>Settings </h3>\n            <div className=\"date-container\">\n                <label className=\"label\">Date</label>\n                <DatePicker selected={date} onChange={date => setDate(date)} />\n            </div>\n\n            <div>\n                <label className=\"label\">Theme</label>\n                <Dropdown options={dropdownOptions}  value={theme} onChange={theme => setTheme(theme.value)} placeholder=\"Select a theme\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SideMenu;","import React, { useState }from 'react';\nimport { Link } from \"react-router-dom\";\nimport Header from './Header';\nimport SideMenu from './SideMenu';\nimport { Editor, EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'draft-js/dist/Draft.css';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-dropdown/style.css';\n\nfunction EditorView() {\n    const [date, setDate] = useState(new Date());\n    const [theme, setTheme] = useState('default')\n    const [editorState, setEditorState] = React.useState(\n        () => EditorState.createEmpty(),\n      );\n    const [title, setTitle] = useState('');\n\n    return (\n        <div>\n            <div >\n                <div className=\"editor-body\">\n                    <Header />\n                    <main>\n                        <div className=\"editor-container\">\n                            <input className=\"title\" value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Add a Title\"/>\n                            <Editor \n                                className=\"editorStyle\"\n                                editorState={editorState}\n                                placeholder=\"Let the thoughts flow\"\n                                onChange={state => setEditorState(state)}\n                                spellCheck={true} \n                                />\n                        </div>\n                    </main>\n\n                    <aside className=\"side-menu\">\n                       <SideMenu\n                            date={date}\n                            theme={theme}\n                            setDate={setDate}\n                            setTheme={setTheme}\n                       />\n                    \n                        <Link className=\"link\" to={{\n                            pathname: '/preview',\n                            state: {\n                                date,\n                                theme,\n                                text: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n                                title\n                            }\n                        }}> \n                            Preview \n                        </Link>\n                    </aside>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditorView;","import React , {useEffect}from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport htmlToDraft from 'html-to-draftjs';\nimport  Header from './Header';\n\n\nfunction Preview(props) {\n    const { state } = props.location;\n   \n    useEffect(() => console.log(state))\n    const date = state.date.toLocaleDateString()\n    const { text, theme, title } = state;\n\n    return (\n        <div className={`preview ${theme}`}>\n            <Header />\n            <div className=\"preview-body\">\n                <div>\n                    <h1 className=\"preview-title\">{title !== \"\" ? title : `Untitled`}</h1>\n                    <p className=\"preview-date\">{date}</p>\n                    <div\n                        dangerouslySetInnerHTML={{\n                            __html: text\n                        }} className=\"preview-text\"></div>\n\n                </div>\n            </div>\n            <div className=\"preview-links\">\n                <div>\n                    <Link to=\"/SimpleEditor\" className=\"link\">Back to Editor</Link>\n                    <a src=\"https://github.com/sarahchima/SimpleEditor\" className=\"link undecorated-link\">View on Github</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Preview;","import './App.css';\nimport Editor from './Components/Editor';\nimport Preview from './Components/Preview';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path='/preview'\n          render={(props) => (\n            <Preview {...props}  />\n          )}\n        />\n        <Route path=\"/\">\n          <Editor/>\n        </Route>\n      </Switch>\n  </Router>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}